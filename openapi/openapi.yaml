openapi: 3.0.1
info:
  title: Arke Phoenix Starter
  description: API Documentation for Arke Phoenix Starter [v1]
  version: '1.0'
servers:
  - url: http://localhost:4000/lib
  - url: https://localhost:4000/lib
tags:
  - name: Unit
    description: Unit CRUD
  - name: Link
    description: Link operations
  - name: Struct
    description: Unit struct
  - name: Group
    description: Group management
  - name: Auth
    description: Auth endpoints
paths:
  /{arke_id}/unit:
    post:
      tags:
        - Unit
      summary: Create
      description: Create a new Unit of a specific Arke
      operationId: create_unit
      parameters:
        - $ref: '#/components/parameters/arkeId'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/UnitExample'
                  messages:
                    type: array
                    items: {}
                    example: []
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []
    get:
      tags:
        - Unit
      summary: All Units
      description: Get all Units of a specific Arke
      operationId: get_units
      parameters:
        - $ref: '#/components/parameters/arkeId'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/filterParam'
        - $ref: '#/components/parameters/orderParam'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnitExample'
                      count:
                        type: integer
                        description: Count of all Units
                        example: 1
                  messages:
                    type: array
                    items: {}
                    example: []
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []
  /{arke_id}/unit/{unit_id}:
    get:
      tags:
        - Unit
      summary: Read
      description: Query for a specif Unit. This operation returns a detailed view of the given element
      operationId: get_unit
      parameters:
        - $ref: '#/components/parameters/arkeId'
        - $ref: '#/components/parameters/unitId'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/UnitExample'
                  messages:
                    type: array
                    items: {}
                    example: []
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []
    put:
      tags:
        - Unit
      summary: Update
      description: Update Unit with the given data
      operationId: update_unit
      parameters:
        - $ref: '#/components/parameters/arkeId'
        - $ref: '#/components/parameters/unitId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    $ref: '#/components/schemas/UnitExample'
                  messages:
                    type: array
                    items: {}
                    example: []
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []
    delete:
      tags:
        - Unit
      summary: Delete
      description: Delete a unit by id
      operationId: delete_unit
      parameters:
        - $ref: '#/components/parameters/arkeId'
        - $ref: '#/components/parameters/unitId'
      responses:
        '204':
          description: No content
          content: {}
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []

  /{arke_id}/unit/{unit_id}/link/{direction}:
    get:
      tags:
        - Link
      summary: Unit Children
      description: Get all elements (limited by depth parameter) linked to the given Unit
      operationId: get_connection
      parameters:
        - $ref: '#/components/parameters/arkeId'
        - $ref: '#/components/parameters/unitId'
        - name: direction
          in: path
          description: Direction
          required: true
          schema:
            type: string
        - name: depth
          in: query
          description: Depth
          schema:
            type: number
        - name: link_type
          in: query
          description: Link ID
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/filterParam'
        - $ref: '#/components/parameters/orderParam'
      responses:
        '200':
          description: OK
          content: {}
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []

  /{arke_id}/unit/{unit_id}/link/{link_id}/{arke_id_child}/unit/{unit_id_child}:
    post:
      tags:
        - Link
      summary: Connection
      description: Create a link between two units
      operationId: post_connection
      parameters:
        - $ref: '#/components/parameters/arkeId'
        - $ref: '#/components/parameters/unitId'
        - $ref: '#/components/parameters/linkId'
        - name: arke_id_child
          in: path
          description: Arke ID Child
          required: true
          schema:
            type: string
        - name: unit_id_child
          in: path
          description: Unit ID Child
          required: true
          schema:
            type: string
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OK'
      responses:
        '200':
          description: OK
          content: {}
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []
    delete:
      tags:
        - Link
      summary: Connection
      description: Delete a link between two units
      operationId: delete_connection
      parameters:
        - $ref: '#/components/parameters/arkeId'
        - $ref: '#/components/parameters/unitId'
        - $ref: '#/components/parameters/linkId'
        - name: arke_id_child
          in: path
          description: Arke ID Child
          required: true
          schema:
            type: string
        - name: unit_id_child
          in: path
          description: Unit ID Child
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
          content: {}
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []
  /{arke_id}/struct:
    get:
      tags:
        - Struct
      summary: Struct
      description: Get all the parameter and their types associated to the given element. Useful to create/update
      operationId: get_arke_struct
      parameters:
        - $ref: '#/components/parameters/arkeId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArkeStruct'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []

  /{arke_id}/unit/{unit_id}/struct:
    get:
      tags:
        - Struct
      summary: Struct
      description: Get all the parameter and their types associated to the given element. Useful to create/update
      operationId: get_unit_struct
      parameters:
        - $ref: '#/components/parameters/arkeId'
        - $ref: '#/components/parameters/unitId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitStruct'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []
  /{arke_id}/group:
    get:
      tags:
        - Group
      summary: Arke groups
      description: Get all the groups of an Arke
      operationId: get_groups
      parameters:
        - $ref: '#/components/parameters/arkeId'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 1
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/UnitGroupExample'
                  messages:
                    type: array
                    items: {}
                    example: []
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []
  /group/{group_id}/struct:
    get:
      tags:
        - Group
      summary: Group struct
      description: Get the struct for the given group
      operationId: get_group_struct
      parameters:
        - name: group_id
          in: path
          description: Group ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Client Error
          content: {}
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []
  /group/{group_id}/unit:
    get:
      tags:
        - Group
      summary: Unit list
      description: Get all the units of all the Arke in the given group
      operationId: get_unit_group
      parameters:
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/filterParam'
        - $ref: '#/components/parameters/orderParam'
      responses:
        '200':
          description: OK
          content: {}
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []
  /group/{group_id}/arke:
    get:
      tags:
        - Group
      summary: Arke list
      description: Get all theArke in the given group
      operationId: get_arke_group
      parameters:
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/limitParam'
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/filterParam'
        - $ref: '#/components/parameters/orderParam'
      responses:
        '200':
          description: OK
          content: {}
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []
  /group/{group_id}/unit/{unit_id}:
    get:
      tags:
        - Group
      summary: Unit detail
      description: Get the detail of the given unit in a given group
      operationId: get_unit_detail_group
      parameters:
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/unitId'
      responses:
        '200':
          description: OK
          content: {}
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
        - ProjectKey: []
  /auth/verify:
    post:
      tags:
        - Auth
      summary: Verify token
      description: Verify user token
      operationId: verify_token
      responses:
        '200':
          description: OK
          content: {}
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - ApiKey: []
  /auth/signin:
    post:
      tags:
        - Auth
      summary: Signin
      description: Signin to the service
      operationId: signin
      requestBody:
        description: Username
        content:
          application/json:
            schema:
              required:
                - password
                - username
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    allOf:
                      - $ref: '#/components/schemas/UserUnit'
                      - properties:
                          access_token:
                            type: string
                            example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c'
                          refresh_token:
                            type: string
                            example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJ0eXAiOiJyZWZyZXNoIn0.yVUXwUuCMOd_7MD7JPdJAxVz8mv6Tn5-Sl3T4fzAIp8'
                  messages:
                    type: array
                    items: {}
                    example: []

        '400':
          $ref: '#/components/responses/Error'
        '401':
          $ref: '#/components/responses/Unauthorized'
      x-codegen-request-body-name: credentials
  /auth/signup:
    post:
      tags:
        - Auth
      summary: Signup
      description: Create a new user
      operationId: signup
      requestBody:
        description: Username
        content:
          application/json:
            schema:
              required:
                - password
                - username
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
        required: false
      responses:
        '200':
          description: OK
          content: {}
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/NotFound'
      x-codegen-request-body-name: credentials
  /auth/refresh:
    post:
      tags:
        - Auth
      summary: Refresh token
      description: Refresh the JWT tokens. (Must use the refresh_token instead of the access_token)
      operationId: refresh_tokens
      responses:
        '200':
          description: OK
          content: {}
        '400':
          $ref: '#/components/responses/Error'
      security:
        - ApiKey: []
        - ProjectKey: []


components:
  securitySchemes:
    ApiKey:
      type: apiKey
      description: 'API Token must follow: `Bearer {access_token}` Use the signin endpoint to get the token value'
      name: Authorization
      in: header
    ProjectKey:
      type: apiKey
      in: header
      name: arke-project-key
      description: 'The name of the project where to make the API call'
  parameters:
    unitId:
      name: unit_id
      in: path
      description: Unit ID
      required: true
      schema:
        type: string
    groupId:
      name: group_id
      in: path
      description: Group ID
      required: true
      schema:
        type: string
    linkId:
      name: link_id
      in: path
      description: Link ID
      required: true
      schema:
        type: string
    arkeId:
      name: arke_id
      in: path
      description: Arke ID
      required: true
      schema:
        type: string
    limitParam:
      name: limit
      in: query
      description: Limits the number of returned results
      required: false
      schema:
        type: integer
        minimum: 0
    offsetParam:
      name: offset
      in: query
      description: Set an offset
      required: false
      schema:
        type: integer
        minimum: 0
    orderParam:
      name: order[]
      in: query
      description: Define in which order get the returned results
      required: false
      schema:
        type: string
        example: 'order[]=id;desc&order[]=label;asc'
    filterParam:
      name: filter
      in: query
      description: Arke API filter
      required: false
      schema:
        type: string
        example: 'filter=and(gte(age,23),contains(name,string))'

  responses:
    Error:
      description: Client Error
      content: {}
    OK:
      description: OK
    NotFound:
      description: Arke/Unit not found
      content:
        application/json:
          schema:
            type: object
            properties:
              content:
                type: array
                items: {}
                nullable: true
                example: null
              message:
                type: array
                items: {}
                example: []
    Unauthorized:
      description: Unauthorized
  schemas:
    OK:
      type: object
      properties:
        id:
          type: integer
          description: The user ID.
        username:
          type: string
          description: The user name.
    ArkeStruct:
      type: object
      properties:
        label:
          type: string
          example: Test
        parameters:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/StringParameter'
              - $ref: '#/components/schemas/IntegerParameter'
    UnitStruct:
      type: object
      properties:
        label:
          type: string
          example: Test
        parameters:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/IntegerParameterUnit'
              - $ref: '#/components/schemas/StringParameterUnit'
    StringParameter:
      type: object
      properties:
        default:
          type: string
          example: null
          nullable: true
          description: Default value of the parameter
        helper_text:
          type: string
          nullable: true
          example: null
        id:
          type: string
          example: label
        label:
          type: string
          example: Label
        max_length:
          type: integer
          example: 100
        min_length:
          type: integer
          example: 0
        required:
          type: boolean
          example: true
        type:
          type: string
          example: "string"
          description: Type of the parameter
    IntegerParameter:
      type: object
      properties:
        default:
          type: integer
          example: null
          nullable: true
          description: Default value of the parameter
        helper_text:
          type: string
          nullable: true
          example: null
        id:
          type: string
          example: int_parameter
        label:
          type: string
          example: Integer Parameter
        max:
          type: integer
          example: null
          nullable: true
        min:
          type: integer
          example: 5
          nullable: true
        required:
          type: boolean
          example: true
        type:
          type: string
          example: "integer"
          description: Type of the parameter
    IntegerParameterUnit:
      allOf:
        - $ref: '#/components/schemas/IntegerParameter'
        - properties:
            value:
              type: integer
              example: 10
    StringParameterUnit:
      allOf:
        - $ref: '#/components/schemas/StringParameter'
        - properties:
            value:
              type: string
              example: 'Test value'
    UnitExample:
      type: object
      properties:
        arke_id:
          type: string
          example: 'test'
          description: Arke ID
        id:
          type: string
          description: UUID or value assigned during creation
          example: '20186cc8-497d-11ed-b878-0242ac120002'
        parameter_1:
          type: string
          nullable: true
          example: null
        parameter_2:
          type: string
          example: Parameter Number 2
        parameter_3:
          type: boolean
          example: true
        parameter_n:
          type: array
          items: {}
          example: []
          nullable: true
        inserted_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    UnitGroupExample:
      type: object
      properties:
        arke_id:
          type: string
          example: 'group'
          description: Arke ID
        arke_list:
          type: array
          items: {}
          example: []
          description: List of Arke linked to the group
        id:
          type: string
          description: UUID or value assigned during creation
          example: 'group_1'
        label:
          type: string
          description: Group label
          example: null
          nullable: true
        description:
          type: string
          description: Group Description
          example: "Description of the example group"
        inserted_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    UserUnit:
      type: object
      properties:
        address:
          type: string
          nullable: true
          example: null
        fist_name:
          type: string
          nullable: true
          example: John
        las_name:
          type: string
          nullable: true
          example: Doe
        username:
          type: string
          nullable: true
          example: jdoe
        phone_number:
          type: string
          nullable: true
          example: "2124567890"
        type:
          type: string
          nullable: true
          example: customer
        fiscal_code:
          type: string
          nullable: true
          example: null
        inserted_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time