"use strict";(self.webpackChunkarke=self.webpackChunkarke||[]).push([[439],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),k=s(n),u=a,h=k["".concat(c,".").concat(u)]||k[u]||d[u]||o;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=k;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},32077:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={id:"getting-started-local-installation",title:"Quickstart on Local Machine"},l=void 0,i={unversionedId:"docs/getting-started/getting-started-local-installation",id:"docs/getting-started/getting-started-local-installation",title:"Quickstart on Local Machine",description:"Introduction",source:"@site/docs/docs/getting-started/getting-started-local-installation.md",sourceDirName:"docs/getting-started",slug:"/docs/getting-started/getting-started-local-installation",permalink:"/arke-docs/docs/getting-started/getting-started-local-installation",draft:!1,editUrl:"https://github.com/arkemishub/arke-docs/docs/docs/getting-started/getting-started-local-installation.md",tags:[],version:"current",frontMatter:{id:"getting-started-local-installation",title:"Quickstart on Local Machine"},sidebar:"docs",previous:{title:"Quickstart with Docker",permalink:"/arke-docs/docs/getting-started/getting-started-docker"},next:{title:"How it works",permalink:"/arke-docs/docs/getting-started/how-it-works"}},c={},s=[{value:"Introduction",id:"introduction",level:2},{value:"Step 1: Define the Workspace",id:"step-1-define-the-workspace",level:3},{value:"Step 2: Init the Arke Backend project",id:"step-2-init-the-arke-backend-project",level:3},{value:"Step 2: Init the Arke Console project",id:"step-2-init-the-arke-console-project",level:3},{value:"Environment",id:"environment",level:3}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"This guide will help you get up and running quickly with the Arke Engine on local machine."),(0,a.kt)("h3",{id:"step-1-define-the-workspace"},"Step 1: Define the Workspace"),(0,a.kt)("p",null,"In the ",(0,a.kt)("inlineCode",{parentName:"p"},"Workspace")," folder create an ",(0,a.kt)("inlineCode",{parentName:"p"},"Arke")," folder, inside it we will initialize the backend project and the Arke Console."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cd ~/Workspace/\nmkdir Arke\n")),(0,a.kt)("p",null,"Define in the file ",(0,a.kt)("inlineCode",{parentName:"p"},"~/.zshenv")," the path to the Arke directory with the key ",(0,a.kt)("inlineCode",{parentName:"p"},"ARKE_WORKSPACE")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Arkemis\nexport ARKE_WORKSPACE=/Users/<YOUR_USERNAME>/Workspace/Arke\n")),(0,a.kt)("h3",{id:"step-2-init-the-arke-backend-project"},"Step 2: Init the Arke Backend project"),(0,a.kt)("p",null,"Clone the ",(0,a.kt)("inlineCode",{parentName:"p"},"Phoenix Starter")," project and backend libraries."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git clone git@github.com:arkemishub/phoenix_starter.git\ngit clone git@github.com:arkemishub/arke-monorepo-elixir.git\n")),(0,a.kt)("p",null,"In the ",(0,a.kt)("inlineCode",{parentName:"p"},"phoenix_starter")," folder, create a ",(0,a.kt)("inlineCode",{parentName:"p"},".env")," file and add the following environment variables:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"export DB_NAME=<ARKE_DB_NAME>\nexport DB_HOSTNAME=<ARKE_DB_HOSTNAME>\nexport DB_USER=<ARKE_DB_USER>\nexport DB_PASSWORD=<ARKE_DB_PASSWORD>\n")),(0,a.kt)("p",null,"To start the Arke backend launch from the project root ",(0,a.kt)("inlineCode",{parentName:"p"},"phoenix_starter"),": "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git fetch --all -p\ngit pull origin main\nmix deps.clean --all\nmix deps.get\nsource .env\niex -S mix phx.server\n")),(0,a.kt)("h2",{id:""}),(0,a.kt)("h3",{id:"step-2-init-the-arke-console-project"},"Step 2: Init the Arke Console project"),(0,a.kt)("p",null,"Clone the ",(0,a.kt)("inlineCode",{parentName:"p"},"Arke Console")," project and frontend libraries."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git clone git@github.com:arkemishub/arke-console.git\ngit clone git@github.com:arkemishub/arke-monorepo.git\n")),(0,a.kt)("p",null,"Define in the ",(0,a.kt)("inlineCode",{parentName:"p"},"hosts")," file a dedicated console host ",(0,a.kt)("inlineCode",{parentName:"p"},"local.arkehub.com"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cd /etc/hosts\nsudo vim hosts\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# Arke Hosts\n127.0.0.1 local.arkehub.com\n")),(0,a.kt)("h3",{id:"environment"},"Environment"),(0,a.kt)("p",null,"Create a new ",(0,a.kt)("inlineCode",{parentName:"p"},"SECRETH_AUTH")," for the next project with the command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"openssl rand -base64 32\n")),(0,a.kt)("p",null,"In the ",(0,a.kt)("inlineCode",{parentName:"p"},"arke_console")," folder create a ",(0,a.kt)("inlineCode",{parentName:"p"},".env.local")," file and add the following environment variables:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"NEXTAUTH_URL=http://local.arkehub.com:3100\nNEXTAUTH_SECRET=<SECRETH_AUTH>\nGH_PA_TOKEN=<GH_PA_TOKEN>\n# Client Side require NEXT_PUBLIC_\nNEXT_PUBLIC_ARKE_SERVER_URL=http://localhost:4000\n")),(0,a.kt)("p",null,"To start the console from the root of the ",(0,a.kt)("inlineCode",{parentName:"p"},"arke_console")," project run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"pnpm install \npnpm start\n")),(0,a.kt)("p",null,"Then access the console from the browser by reaching the address ",(0,a.kt)("a",{parentName:"p",href:"https://local.arkehub.com:3100"},"https://local.arkehub.com:3100")))}d.isMDXComponent=!0}}]);